{"version":3,"sources":["components/Samples.jsx","components/Main/LogoAndButtons.jsx","components/Main/Oscilloscope.jsx","components/Main/SoundControls.jsx","components/Main/Wildcards.jsx","util/Sequence.js","components/Sequencer/StepBarLight.jsx","components/Sequencer/StepBar.jsx","components/Sequencer/Step.jsx","components/Sequencer/Row.jsx","synthesis/Kick.js","synthesis/Snare.js","synthesis/Hat.js","synthesis/Clap.js","components/Sequencer/StepSequencer.jsx","components/DrumBoy.jsx","components/Instructions.jsx","components/Container.jsx","App.js","serviceWorker.js","index.js"],"names":["Samples","className","id","src","autoPlay","loop","React","Component","LogoAndButtons","color","this","props","colorScheme","onClick","togglePlay","playing","bpm","value","onChange","e","changeColorScheme","disabled","Oscilloscope","visualize","cancelAnimationFrame","animation","canvasCtx","clearRect","WIDTH","HEIGHT","state","mode","drawOsc","drawBars","getColor","analyser","fftSize","bufferLength","dataArray","Uint8Array","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","y","moveTo","lineTo","canvas","width","height","stroke","bufferLengthAlt","frequencyBinCount","dataArrayAlt","getByteFrequencyData","barHeight","barWidth","toggleMode","preventDefault","setState","document","addEventListener","querySelector","getContext","alt","SoundControls","updateSound","sound","setting","parseInt","currentTarget","toggleMute","muted","keyCode","type","masterVolume","min","max","changeMasterVolume","kick","volume","tone","decay","snare","hat","clap","Wildcards","toggleBitCrusher","bitCrusher","wet","toggleChorus","chorus","toggleWah","wah","togglePingPong","pingPong","toggleRain","rain","rainQueued","paused","play","pause","toggleScience","science","scienceQueued","toggleSynth","synth","synthQueued","toggleSubway","subway","subwayQueued","toggleVinyl","vinyl","vinylQueued","playDracula","dracula","setTimeout","triggerMeow","cat","tryAgain","robot","context","effects","getElementById","rainCtx","createMediaElementSource","rainGain","createGain","connect","draculaCtx","draculaGain","catCtx","catGain","robotCtx","robotGain","scienceCtx","scienceGain","synthCtx","synthGain","subwayCtx","subwayGain","vinylCtx","vinylGain","prevProps","key","Sequence","steps","StepBarLight","activeLight","step","currentStep","StepBar","Array","keys","map","num","Step","toggleSelect","stepNumber","selected","updateSequence","Row","Kick","setup","osc","createOscillator","gain","trigger","time","frequency","setValueAtTime","exponentialRampToValueAtTime","linearRampToValueAtTime","start","stop","rawContext","Snare","noiseBuffer","bufferSize","sampleRate","buffer","createBuffer","output","getChannelData","Math","random","noise","createBufferSource","noiseFilter","createBiquadFilter","noiseEnvelope","oscEnvelope","Hat","bndPass","Q","hipass","ratios","forEach","ratio","Clap","envelope","pulseWidth","filter","StepSequeuncer","pressStart","click","removeEventListener","componentDidUpdate","transport","repeat","kickSequence","snareSequence","hatSequence","clapSequence","warmUp","loading","loaded","bootUpSequencer","scheduleRepeat","DrumBoy","Transport","toggle","updateBpm","target","updateBpmFromArrowKey","updatedSound","currentTime","prevVolume","createAnalyser","Tone","BitCrusher","Chorus","AutoWah","PingPongDelay","input","destination","swing","loopEnd","testSynth","triggerAttackRelease","Instructions","toggleInstructions","Container","instructions","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3cf20f9.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Samples extends React.Component {\n  render() {\n    return (\n      <div className=\"samples\">\n        <audio id=\"rain\" src=\"/ElectronAligner/assets/sounds/rain.mp3\" autoPlay={false} loop></audio>\n        <audio id=\"science\" src=\"/ElectronAligner/assets/sounds/science.mp3\" autoPlay={false} loop></audio>\n        <audio id=\"subway\" src=\"/ElectronAligner/assets/sounds/subway.mp3\" autoPlay={false} loop></audio>\n        <audio id=\"synth\" src=\"/ElectronAligner/assets/sounds/synth.mp3\" autoPlay={false} loop></audio>\n        <audio id=\"vinyl\" src=\"/ElectronAligner/assets/sounds/vinyl.mp3\" autoPlay={false} loop></audio>\n        <audio id=\"cat\" src=\"/ElectronAligner/assets/sounds/cat.mp3\" autoPlay={false}></audio>\n        <audio id=\"robot\" src=\"/ElectronAligner/assets/sounds/robot.mp3\" autoPlay={false}></audio>\n        <audio id=\"dracula\" src=\"/ElectronAligner/assets/sounds/dracula.mp3\" autoPlay={false}></audio>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class LogoAndButtons extends React.Component {\n  render() {\n    const color = this.props.colorScheme;\n\n    return (\n      <div className={`logo-and-buttons ${color}`}>\n        <div className=\"logo\">\n          <h1 className=\"main-heading\">Electron Aligner</h1>\n        </div>\n\n        <div className=\"buttons\">\n          <div \n            className=\"play-button\"\n            onClick={this.props.togglePlay}\n          >\n            {this.props.playing && (\n              <i className=\"fas fa-pause\"></i>\n            )}\n\n            {!this.props.playing && (\n              <i className=\"fas fa-play\"></i>\n            )}\n          </div>\n\n          <div className=\"bpm-select\">\n            {this.props.bpm}\n          </div>\n        </div>\n\n        <select\n          className=\"color-select\"\n          value={this.props.colorScheme}\n          onChange={e => this.props.changeColorScheme(e)}\n        >\n          <option\n            className=\"color-option\"\n            value=\"--color--\"\n            disabled\n          >\n            --color--\n          </option>\n          <option className=\"color-option\" value=\"future time\">Future Time</option>\n          <option className=\"color-option\" value=\"sparks\">Sparks</option>\n          <option className=\"color-option\" value=\"dokidoki\">Doki doki</option>\n          <option className=\"color-option\" value=\"free\">Free</option>\n          <option className=\"color-option\" value=\"hxh\">HxH</option>\n        </select>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class Oscilloscope extends React.Component {\n  constructor(props) {\n    super(props);\n    const { analyser } = this.props;\n    this.state = {\n      mode: 'osc' //two modes: 'osc' and 'bar'\n    };\n\n    this.animation = null;\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      this.canvas = document.querySelector('.osc-canvas');\n      this.canvasCtx = this.canvas.getContext(\"2d\");\n      this.WIDTH = this.canvas.width;\n      this.HEIGHT = this.canvas.height;\n\n      this.analyser =  analyser;\n\n      // navigator.mediaDevices.getUserMedia({ audio: true })\n      //   .then(stream => {\n      //     const source = context.createMediaStreamSource(stream);\n      //     source.connect(this.analyser);\n      // })\n\n      this.visualize();\n    })\n  }\n\n  componentDidUpdate() {\n    this.visualize();\n  }\n\n\n  visualize = () => {\n    cancelAnimationFrame(this.animation);\n    this.canvasCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT);\n    (this.state.mode === 'osc') ? this.drawOsc() : this.drawBars();\n  }\n\n  getColor = () => {\n    switch (this.props.colorScheme) {\n      case \"future time\":\n        return \"rgb(143, 97, 230)\";\n      case \"sparks\":\n        return \"rgb(231, 133, 41)\";\n      case \"dokidoki\":\n        return \"rgb(248, 103, 131)\";\n      case \"free\":\n        return \"rgb(71, 209, 222)\";\n      case \"hxh\":\n        return \"rgb(81, 145, 78)\";\n      default:\n        return \"rgb(143, 97, 230)\";\n    }\n  }\n\n\n  drawOsc = () => {\n\n\n    this.analyser.fftSize = 2048;\n    let bufferLength = this.analyser.fftSize;\n    const dataArray = new Uint8Array(bufferLength);\n    this.animation = requestAnimationFrame(this.drawOsc);\n\n    this.analyser.getByteTimeDomainData(dataArray);\n    this.canvasCtx.fillStyle = 'rgb(0, 0, 0)';//'rgb(256, 256, 256)';//'rgb(200, 200, 200)';\n    this.canvasCtx.fillRect(0, 0, this.WIDTH, this.HEIGHT);\n\n    this.canvasCtx.lineWidth = 2;\n    this.canvasCtx.strokeStyle = `${this.getColor()}`; //'rgb(0, 0, 0)';\n\n    this.canvasCtx.beginPath();\n\n    let sliceWidth = this.WIDTH * 1.0 / bufferLength;\n    let x = 0;\n\n    for (let i = 0; i < bufferLength; i++) {\n\n      let v = dataArray[i] / 128.0;\n      let y = v * this.HEIGHT / 2;\n\n      if (i === 0) {\n        this.canvasCtx.moveTo(x, y);\n      } else {\n        this.canvasCtx.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n\n    this.canvasCtx.lineTo(this.canvas.width, this.canvas.height / 2);\n    this.canvasCtx.stroke();\n  }\n\n  drawBars = () => {\n    this.analyser.fftSize = 256;\n    let bufferLengthAlt = this.analyser.frequencyBinCount;\n    const dataArrayAlt = new Uint8Array(bufferLengthAlt);\n\n    this.animation = requestAnimationFrame(this.drawBars);\n\n    this.analyser.getByteFrequencyData(dataArrayAlt);\n\n    this.canvasCtx.fillStyle = 'rgb(0, 0, 0)';\n    this.canvasCtx.fillRect(0, 0, this.WIDTH, this.HEIGHT);\n\n    let barWidth = (this.WIDTH / bufferLengthAlt) * 2.5;\n    let barHeight;\n    let x = 0;\n\n    for (let i = 0; i < bufferLengthAlt; i++) {\n      barHeight = dataArrayAlt[i];\n\n      this.canvasCtx.fillStyle = `${this.getColor()}`//'rgb(' + (barHeight + 50) + ',97,230)';//'rgb(' + (barHeight + 100) + ',50,50)';\n      this.canvasCtx.fillRect(x, this.HEIGHT - barHeight / 2, barWidth, barHeight / 2);\n\n      x += barWidth + 1;\n    }\n  }\n\n  toggleMode = e => {\n    e.preventDefault();\n    if (this.state.mode === 'osc') {\n      this.setState({ mode: 'bar' });\n    } else {\n      this.setState({ mode: 'osc' });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"oscilloscope\">\n        <button className=\"visual-select\" onClick={this.toggleMode}>\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/waveform-path-solid.svg\"\n            alt=\"\"\n          />\n        </button>\n        <canvas className=\"osc-canvas\" />\n      </div>\n    )\n  }\n}\n","import React from 'react';\n\nexport default class SoundControls extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      muted: false\n    };\n\n    document.addEventListener('keydown', e => {\n      switch (e.keyCode) {\n        case 77:\n          this.props.toggleMute();\n          break;\n        default:\n          return;\n      }\n    })\n  }\n\n  updateSound = (e, sound, setting) => {\n    const value = parseInt(e.currentTarget.value);\n    this.props.updateSound(sound, setting, value);\n  }\n\n  toggleMute = () => {\n    this.setState(state => ({ muted: !state.muted }));\n    this.props.toggleMute();\n  }\n\n  render() {\n    const color = this.props.colorScheme;\n\n    return (\n      <div className={`sound-controls ${color}`}>\n        <input\n          className={`master-volume ${color}`}\n          type=\"range\"\n          value={this.props.masterVolume * 100}\n          min={0}\n          max={100}\n          onChange={this.props.changeMasterVolume}\n        />\n\n        <button\n          className=\"mute-button\"\n          onClick={this.toggleMute}\n        >\n          {this.state.muted && (\n            <img\n              className=\"wildcard-image\"\n              src=\"/ElectronAligner/assets/images/volume-mute-solid.svg\"\n              alt=\"\"\n            />\n          )}\n\n          {!this.state.muted && (\n            <img\n              className=\"wildcard-image\"\n              src=\"/ElectronAligner/assets/images/volume-up-solid.svg\"\n              alt=\"\"\n            />\n          )}\n        </button>\n\n        <div className=\"sc-left\">\n          <div className=\"kick-controls\">\n            <h3 className=\"sound-label\">Kick</h3>\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={100}\n              value={this.props.kick.volume * 100}\n              onChange={e => this.updateSound(e, 'kick', 'volume')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={100}\n              max={350}\n              value={this.props.kick.tone}\n              onChange={e => this.updateSound(e, 'kick', 'tone')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={200}\n              value={this.props.kick.decay * 100}\n              onChange={e => this.updateSound(e, 'kick', 'decay')}\n            />\n          </div>\n\n          <div className=\"snare-controls\">\n            <h3 className=\"sound-label\">Snare</h3>\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={100}\n              value={this.props.snare.volume * 100}\n              onChange={e => this.updateSound(e, 'snare', 'volume')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={20}\n              max={300}\n              value={this.props.snare.tone}\n              onChange={e => this.updateSound(e, 'snare', 'tone')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={75}\n              value={this.props.snare.decay * 100}\n              onChange={e => this.updateSound(e, 'snare', 'decay')}\n            />\n          </div>\n        </div>\n\n        <div className=\"sc-middle\">\n          <div className=\"setting-labels\">\n           <p>Volume</p>\n           <p>Tone</p>\n           <p>Decay</p>\n          </div>\n\n          <div className=\"setting-labels\">\n            <p>Volume</p>\n            <p>Tone</p>\n            <p>Decay</p>\n          </div>\n        </div>\n\n        <div className=\"sc-right\">\n          <div className=\"hat-controls\">\n            <h3 className=\"sound-label\">Hat</h3>\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={100}\n              value={this.props.hat.volume * 100}\n              onChange={e => this.updateSound(e, 'hat', 'volume')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={100}\n              max={350}\n              value={this.props.hat.tone}\n              onChange={e => this.updateSound(e, 'hat', 'tone')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={200}\n              value={this.props.hat.decay * 100}\n              onChange={e => this.updateSound(e, 'hat', 'decay')}\n            />\n          </div>\n\n          <div className=\"clap-controls\">\n            <h3 className=\"sound-label\">Clap</h3>\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={100}\n              value={this.props.clap.volume * 100}\n              onChange={e => this.updateSound(e, 'clap', 'volume')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={300}\n              max={1000}\n              value={this.props.clap.tone}\n              onChange={e => this.updateSound(e, 'clap', 'tone')}\n            />\n\n            <input\n              className={`${color}`}\n              type=\"range\"\n              min={0}\n              max={75}\n              value={this.props.clap.decay * 100}\n              onChange={e => this.updateSound(e, 'clap', 'decay')}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class Wildcards extends React.Component {\n  constructor(props) {\n    super(props);\n    const { context, effects } = this.props;\n    this.state = {\n      rain: false,\n      dracula: false,\n      cat: false,\n      robot: false,\n      bitCrusher: false,\n      chorus: false,\n      wah: false,\n      pingPong: false,\n      science: false,\n      synth: false,\n      subway: false,\n      vinyl: false,\n      rainQueued: false,\n      scienceQueued: false,\n      synthQueued: false,\n      subwayQueued: false,\n      vinylQueued: false\n    };\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      //rain\n      this.rain = document.getElementById('rain');\n      const rainCtx = context.createMediaElementSource(this.rain);\n      this.rainGain = context.createGain();\n      rainCtx.connect(this.rainGain);\n      this.rainGain.connect(effects);\n\n      //dracula \n      this.dracula = document.getElementById('dracula');\n      const draculaCtx = context.createMediaElementSource(this.dracula);\n      this.draculaGain = context.createGain();\n      draculaCtx.connect(this.draculaGain);\n      this.draculaGain.connect(effects);\n\n      //cat\n      this.cat = document.getElementById('cat');\n      const catCtx = context.createMediaElementSource(this.cat);\n      this.catGain = context.createGain();\n      catCtx.connect(this.catGain);\n      this.catGain.connect(effects);\n\n      //robot \n      this.robot = document.getElementById('robot');\n      const robotCtx = context.createMediaElementSource(this.robot);\n      this.robotGain = context.createGain();\n      robotCtx.connect(this.robotGain);\n      this.robotGain.connect(effects);\n\n      //science\n      this.science = document.getElementById('science');\n      const scienceCtx = context.createMediaElementSource(this.science);\n      this.scienceGain = context.createGain();\n      scienceCtx.connect(this.scienceGain);\n      this.scienceGain.connect(effects);\n\n      //synth\n      this.synth = document.getElementById('synth');\n      const synthCtx = context.createMediaElementSource(this.synth);\n      this.synthGain = context.createGain();\n      synthCtx.connect(this.synthGain);\n      this.synthGain.connect(effects);\n\n      //subway\n      this.subway = document.getElementById('subway');\n      const subwayCtx = context.createMediaElementSource(this.subway);\n      this.subwayGain = context.createGain();\n      subwayCtx.connect(this.subwayGain);\n      this.subwayGain.connect(effects);\n\n      //vinyl\n      this.vinyl = document.getElementById('vinyl');\n      const vinylCtx = context.createMediaElementSource(this.vinyl);\n      this.vinylGain = context.createGain();\n      vinylCtx.connect(this.vinylGain);\n      this.vinylGain.connect(effects);\n    })\n  }\n\n  // this handles stopping and starting all wildcards when toggling play\n  componentDidUpdate(prevProps) {\n    if (this.props.playing && !prevProps.playing) {\n      if (this.state.rainQueued) this.rain.play();\n      if (this.state.scienceQueued) this.science.play();\n      if (this.state.subwayQueued) this.subway.play();\n      if (this.state.vinylQueued) this.vinyl.play();\n      if (this.state.synthQueued) this.synth.play();\n    } else if (!this.props.playing && prevProps.playing) {\n      if (!this.rain.paused) this.rain.pause();\n      if (!this.science.paused) this.science.pause();\n      if (!this.subway.paused) this.subway.pause();\n      if (!this.vinyl.paused) this.vinyl.pause();\n      if (!this.synth.paused) this.synth.pause();\n    }\n  }\n\n  toggleBitCrusher = () => {\n    const { bitCrusher } = this.props;\n    this.setState(state => ({ bitCrusher: !state.bitCrusher }));\n    if (bitCrusher.wet.value === 0) {\n      bitCrusher.wet.value = 1;\n    } else {\n      bitCrusher.wet.value = 0;\n    }\n  }\n\n  toggleChorus = () => {\n    const { chorus } = this.props;\n    this.setState(state => ({ chorus: !state.chorus }));\n    if (chorus.wet.value === 0) {\n      chorus.wet.value = 1;\n    } else {\n      chorus.wet.value = 0;\n    }\n  }\n\n  toggleWah = () => {\n    const { wah } = this.props;\n    this.setState(state => ({ wah: !state.wah }));\n    if (wah.wet.value === 0) {\n      wah.wet.value = 1;\n    } else {\n      wah.wet.value = 0;\n    }\n  }\n\n  togglePingPong = () => {\n    const { pingPong } = this.props;\n    this.setState(state => ({ pingPong: !state.pingPong }));\n    (pingPong.wet.value === 0) ? pingPong.wet.value = 0.5 : pingPong.wet.value = 0;\n  }\n\n  toggleRain = () => {\n    this.setState(state => ({ rain: !state.rain }));\n    if (!this.props.playing) {\n      this.setState(state => ({ rainQueued: !state.rainQueued }));\n      return;\n    } else {\n      this.setState(state => ({ rainQueued: !state.rainQueued }));\n    }\n    (this.rain.paused) ? this.rain.play() : this.rain.pause();\n  }\n\n  toggleScience = () => {\n    this.setState(state => ({ science: !state.science }));\n    if (!this.props.playing) {\n      this.setState(state => ({ scienceQueued: !state.scienceQueued }));\n      return;\n    } else {\n      this.setState(state => ({ scienceQueued: !state.scienceQueued }));\n    }\n    (this.science.paused) ? this.science.play() : this.science.pause();\n  }\n\n  toggleSynth = () => {\n    this.setState(state => ({ synth: !state.synth }));\n    if (!this.props.playing) {\n      this.setState(state => ({ synthQueued: !state.synthQueued }));\n      return;\n    } else {\n      this.setState(state => ({ synthQueued: !state.synthQueued }));\n    }\n    (this.synth.paused) ? this.synth.play() : this.synth.pause();\n  }\n\n  toggleSubway = () => {\n    this.setState(state => ({ subway: !state.subway }));\n    if (!this.props.playing) {\n      this.setState(state => ({ subwayQueued: !state.subwayQueued }));\n      return;\n    } else {\n      this.setState(state => ({ subwayQueued: !state.subwayQueued }));\n    }\n    (this.subway.paused) ? this.subway.play() : this.subway.pause();\n  }\n\n  toggleVinyl = () => {\n    this.setState(state => ({ vinyl: !state.vinyl }));\n    if (!this.props.playing) {\n      this.setState(state => ({ vinylQueued: !state.vinylQueued }));\n      return;\n    } else {\n      this.setState(state => ({ vinylQueued: !state.vinylQueued }));\n    }\n    (this.vinyl.paused) ? this.vinyl.play() : this.vinyl.pause();\n  }\n\n  playDracula = () => {\n    if (!this.dracula.paused) return;\n    this.setState({ dracula: true });\n    this.dracula.play();\n    setTimeout(() => {\n      this.setState({ dracula: false });\n    }, 5500);\n  }\n\n  triggerMeow = () => {\n    if (!this.cat.paused) return;\n    this.setState({ cat: true });\n    this.cat.play();\n    setTimeout(() => {\n      this.setState({ cat: false });\n    }, 1000);\n  }\n\n  tryAgain = () => {\n    if (!this.robot.paused) return;\n    this.setState({ robot: true });\n    this.robot.play();\n    setTimeout(() => {\n      this.setState({ robot: false });\n    }, 2000);\n  }\n\n  render() {\n    const color = this.props.colorScheme;\n\n    const bitCrusher = (this.state.bitCrusher) ? \"active-effect\" : \"\";\n    const rain = (this.state.rain) ? \"active-effect\" : \"\";\n    const chorus = (this.state.chorus) ? \"active-effect\" : \"\";\n    const wah = (this.state.wah) ? \"active-effect\" : \"\";\n    const pingPong = (this.state.pingPong) ? \"active-effect\" : \"\";\n    const dracula = (this.state.dracula) ? \"active-effect\" : \"\";\n    const cat = (this.state.cat) ? \"active-effect\" : \"\";\n    const robot = (this.state.robot) ? \"active-effect\" : \"\";\n    const science = (this.state.science) ? \"active-effect\" : \"\";\n    const synth = (this.state.synth) ? \"active-effect\" : \"\";\n    const subway = (this.state.subway) ? \"active-effect\" : \"\";\n    const vinyl = (this.state.vinyl) ? \"active-effect\" : \"\";\n\n    return (\n      <ul className={`wildcards ${color}`}>\n        <li\n          className={`wildcard ${color} ${rain}`}\n          onClick={this.toggleRain}\n          key=\"rain\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/raindrops-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${dracula}`}\n          onClick={this.playDracula}\n          key=\"dracula\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/bat-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${cat}`}\n          onClick={this.triggerMeow}\n          key=\"cat\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/cat-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${robot}`}\n          onClick={this.tryAgain}\n          key=\"robot\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/robot-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${science}`}\n          onClick={this.toggleScience}\n          key=\"science\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/flask-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${synth}`}\n          onClick={this.toggleSynth}\n          key=\"synth\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/piano-keyboard-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${subway}`}\n          onClick={this.toggleSubway}\n          key=\"subway\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/subway-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${vinyl}`}\n          onClick={this.toggleVinyl}\n          key=\"vinyl\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/turntable-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${bitCrusher}`}\n          onClick={this.toggleBitCrusher}\n          key=\"donotpress\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/bomb-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${chorus}`}\n          onClick={this.toggleChorus}\n          key=\"chorus\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/cassette-tape-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${wah}`}\n          onClick={this.toggleWah}\n          key=\"wah\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/wave-sine-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n        <li\n          className={`wildcard ${color} ${pingPong}`}\n          onClick={this.togglePingPong}\n          key=\"pong\"\n        >\n          <img\n            className=\"wildcard-image\"\n            src=\"/ElectronAligner/assets/images/table-tennis-solid.svg\"\n            alt=\"\"\n          />\n        </li>\n\n\n      </ul>\n    )\n  }\n}","export default class Sequence {\n  constructor() {\n    this.steps = [\n      false, false, false, false,\n      false, false, false, false,\n      false, false, false, false,\n      false, false, false, false\n    ]\n  }\n}","import React from 'react';\n\nexport default class StepBarLight extends React.Component {\n  render() {\n    const { step, currentStep } = this.props;\n    const activeLight = (step === currentStep) ? \"active-light\" : \"\";\n    return <li className={`step-bar-light ${activeLight}`}></li>\n  }\n}","import React from 'react';\nimport StepBarLight from './StepBarLight';\n\nexport default class StepBar extends React.Component {\n  render() {\n    return (\n      <ul className=\"step-bar\">\n        {[...Array(16).keys()].map(num => {\n          return (\n            <StepBarLight \n              step={num} \n              currentStep={this.props.currentStep} \n              key={num}\n            />\n          )\n        })}\n      </ul>\n    )\n  }\n}","import React from 'react';\n\nexport default class Step extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: props.step\n    };\n  }\n\n  toggleSelect = () => {\n    const { sound, stepNumber } = this.props;\n    this.setState(state => {\n      return { selected: !state.selected }\n    });\n    this.props.updateSequence(sound, stepNumber, !this.state.selected);\n  }\n\n  render() {\n    let selected = (this.state.selected) ? \"selected\" : \"\";\n    const color = this.props.colorScheme;\n\n    return (\n      <li\n        className={`step ${selected} ${color}`}\n        onClick={this.toggleSelect}\n      >\n      </li>\n    )\n  }\n}","import React from 'react';\nimport Step from './Step';\n\nexport default class Row extends React.Component {\n\n  render() {\n    return (\n      <div className=\"row-container\">\n        <p className=\"track-label\">{this.props.sound}</p>\n        <ul className=\"row\">\n          {this.props.steps.map((step, i) => {\n            return (\n              <Step\n                step={step}\n                sound={this.props.sound}\n                stepNumber={i}\n                updateSequence={this.props.updateSequence}\n                colorScheme={this.props.colorScheme}\n                key={i}\n              />\n            )\n          })}\n        </ul>\n      </div>\n    )\n  }\n}","export default class Kick {\n  constructor(context, effects, sound) {\n    this.context = context.rawContext;\n    this.effects = effects;\n\n    this.tone = sound.tone;\n    this.volume = sound.volume;\n    this.decay = sound.decay;\n  }\n\n  setup = () => {\n    this.osc = this.context.createOscillator();\n    this.gain = this.context.createGain();\n    this.osc.connect(this.gain);\n    this.gain.connect(this.effects);\n    // this.gain.connect(this.context.destination)\n  }\n\n  trigger = time => {\n    if (!this.volume) return;\n    this.setup();\n\n    this.osc.frequency.setValueAtTime(this.tone, time + 0.001);\n    this.gain.gain.setValueAtTime(this.volume, time);\n\n    this.osc.frequency.exponentialRampToValueAtTime(0.01, time + this.decay);\n    this.gain.gain.exponentialRampToValueAtTime(0.01, time + this.decay);\n    this.gain.gain.linearRampToValueAtTime(0, time + this.decay + 0.1)\n\n    this.osc.start(time);\n\n    this.osc.stop(time + this.decay + 0.1);\n  }\n}","export default class Snare {\n  constructor(context, effects, sound) {\n    this.context = context.rawContext;\n    this.effects = effects;\n\n    this.tone = sound.tone;\n    this.volume = sound.volume;\n    this.decay = sound.decay;\n  }\n\n  noiseBuffer = () => {\n    const bufferSize = this.context.sampleRate;\n    const buffer = this.context.createBuffer(1, bufferSize, this.context.sampleRate);\n    const output = buffer.getChannelData(0);\n    for (var i = 0; i < bufferSize; i++) {\n      output[i] = Math.random() * 2 - 1;\n    }\n\n    return buffer;\n  }\n\n  setup = () => {\n    this.noise = this.context.createBufferSource();\n    this.noise.buffer = this.noiseBuffer();\n    var noiseFilter = this.context.createBiquadFilter();\n    noiseFilter.type = 'highpass';\n    noiseFilter.frequency.value = 1000;\n    this.noise.connect(noiseFilter);\n    this.noiseEnvelope = this.context.createGain();\n    noiseFilter.connect(this.noiseEnvelope);\n    this.noiseEnvelope.connect(this.effects);\n    // this.noiseEnvelope.connect(this.context.destination);\n    this.osc = this.context.createOscillator();\n    this.osc.type = 'triangle';\n    this.oscEnvelope = this.context.createGain();\n    this.osc.connect(this.oscEnvelope);\n    this.oscEnvelope.connect(this.effects);\n    // this.oscEnvelope.connect(this.context.destination);\n  }\n\n  trigger = time => {\n    if (!this.volume) return;\n    this.setup();\n\n    this.noiseEnvelope.gain.setValueAtTime(this.volume, time);\n    this.noiseEnvelope.gain.exponentialRampToValueAtTime(0.01, time + this.decay);\n    this.noise.start(time)\n\n    this.osc.frequency.setValueAtTime(this.tone, time);\n    //still makes noise when no volume\n    if (this.volume >= 0.7) {\n      this.oscEnvelope.gain.setValueAtTime(0.5, time);\n    } else {\n      this.oscEnvelope.gain.setValueAtTime(this.volume, time);\n    }\n    this.oscEnvelope.gain.exponentialRampToValueAtTime(0.01, time + 0.1);\n    this.osc.start(time)\n\n    //still decays when no decay \n    if (this.decay >= 0.2) {\n      this.osc.stop(time + 0.2);\n    } else {\n      this.osc.stop(time + this.decay);\n    }\n  \n    this.noise.stop(time + this.decay);\n  }\n}","export default class Hat {\n  constructor(context, effects, sound) {\n    this.context = context.rawContext;\n    this.effects = effects;\n    //ratios can be tweaked - experiment with the sound\n    this.ratios = [1, 1.3420, 1.2312, 1.6532, 1.9523, 2.1523];\n    this.tone = sound.tone;\n    this.decay = sound.decay;\n    this.volume = sound.volume;\n  }\n\n  setup = () => {\n    this.oscEnvelope = this.context.createGain();\n    this.bndPass = this.context.createBiquadFilter();\n    this.bndPass.type = 'bandpass';\n    this.bndPass.frequency.value = 20000;\n    this.bndPass.Q.value = 0.2;\n    this.hipass = this.context.createBiquadFilter();\n    this.hipass.type = \"highpass\";\n    this.hipass.frequency.value = 5000;\n\n    this.bndPass.connect(this.hipass);\n    this.hipass.connect(this.oscEnvelope);\n    this.oscEnvelope.connect(this.effects);\n    // this.oscEnvelope.connect(this.context.destination);\n  }\n\n  trigger = time => {\n    if (this.volume === 0) return ;\n    this.setup();\n    this.ratios.forEach((ratio) => {\n      const osc = this.context.createOscillator();\n      osc.type = \"square\";\n      osc.frequency.value = this.tone * ratio;\n      osc.connect(this.bndPass);\n      osc.start(time);\n      osc.stop(time + this.decay);\n    });\n    this.oscEnvelope.gain.setValueAtTime(0.00001 * this.volume, time);\n    this.oscEnvelope.gain.exponentialRampToValueAtTime(1 * this.volume, time + 0.001 * this.decay);\n    this.oscEnvelope.gain.exponentialRampToValueAtTime(0.3 * this.volume, time + 0.002 * this.decay);\n\n    //reverse sound vv\n    // this.oscEnvelope.gain.exponentialRampToValueAtTime(1 * this.volume, time + 1 * this.decay);\n    // this.oscEnvelope.gain.exponentialRampToValueAtTime(0.3 * this.volume, time + 1.2 * this.decay);\n    this.oscEnvelope.gain.exponentialRampToValueAtTime(0.00001 * this.volume, time + this.decay);\n  }\n}","export default class Clap {\n  constructor(context, effects, sound) {\n    this.context = context.rawContext;\n    this.effects = effects;\n\n    this.tone = sound.tone;\n    this.volume = sound.volume;\n    this.decay = sound.decay;\n    this.pulseWidth = 0.025;\n  }\n\n  noiseBuffer() {\n    const bufferSize = this.context.sampleRate;\n    const buffer = this.context.createBuffer(1, bufferSize, this.context.sampleRate);\n    const output = buffer.getChannelData(0);\n\n    for (let i = 0; i < bufferSize; i++) {\n      output[i] = Math.random() * 2 - 1;\n    }\n    return buffer;\n  }\n\n  setup() {\n    this.noise = this.context.createBufferSource();\n    this.noise.buffer = this.noiseBuffer();\n    this.filter = this.context.createBiquadFilter();\n    this.filter.type = 'bandpass';\n    this.filter.frequency.value = this.tone * 2;\n    this.envelope = this.context.createGain();\n\n\n    this.noise.connect(this.filter);\n    this.filter.connect(this.envelope);\n    this.envelope.connect(this.effects);\n    // this.envelope.connect(this.context.destination);\n  }\n\n  trigger = time => {\n    if (!this.volume) return;\n    this.setup();\n    this.envelope.gain.setValueAtTime(this.volume, time);\n    this.envelope.gain.exponentialRampToValueAtTime(0.1, time + this.pulseWidth);\n\n    this.envelope.gain.setValueAtTime(this.volume, time + this.pulseWidth);\n    this.envelope.gain.exponentialRampToValueAtTime(0.1, time + 2 * this.pulseWidth);\n\n    this.envelope.gain.setValueAtTime(this.volume, time + 2 * this.pulseWidth);\n    this.envelope.gain.exponentialRampToValueAtTime(0.001, time + this.decay);\n\n\n    this.noise.start(time)\n    this.noise.stop(time + this.decay);\n  }\n}","import React from 'react';\nimport ReactLoading from 'react-loading'\nimport Sequence from '../../util/Sequence';\nimport StepBar from './StepBar';\nimport Row from './Row';\n\nimport Kick from '../../synthesis/Kick';\nimport Snare from '../../synthesis/Snare';\nimport Hat from '../../synthesis/Hat';\nimport Clap from '../../synthesis/Clap';\n \n\nexport default class StepSequeuncer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 0,\n      loaded: false, \n      loading: false \n    };\n\n    const { transport, effects, kick, snare, hat, clap } = this.props;\n\n    this.transport = transport;\n    this.context = transport.context;\n    this.effects = effects;\n\n    this.kick = new Kick(this.context, this.effects, kick);\n    this.snare = new Snare(this.context, this.effects, snare);\n    this.hat = new Hat(this.context, this.effects, hat);\n    this.clap = new Clap(this.context, this.effects, clap);\n\n    this.kickSequence = new Sequence();\n    this.snareSequence = new Sequence();\n    this.hatSequence = new Sequence();\n    this.clapSequence = new Sequence();\n\n    transport.scheduleRepeat(this.repeat, '16n');\n\n    document.addEventListener('keydown', e => {\n      switch (e.keyCode) {  \n        case 13: \n          e.preventDefault();\n          this.setState({ step: 0 });\n          break;\n        default:\n          return;\n      }\n    })\n\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      const main = document.getElementById('electron-aligner');\n      main.addEventListener('click', this.pressStart);\n    })\n  }\n\n  pressStart = e => {\n    e.preventDefault();\n    document.getElementById('start-button').click();\n    document.getElementById('electron-aligner').removeEventListener('click', this.pressStart);\n  }\n\n  componentDidUpdate = prevProps => {\n    const { kick, snare, hat, clap } = this.props;\n    this.kick = new Kick(this.transport.context, this.effects, kick);\n    this.snare = new Snare(this.transport.context, this.effects, snare);\n    this.hat = new Hat(this.transport.context, this.effects, hat);\n    this.clap = new Clap(this.transport.context, this.effects, clap);\n  }\n\n  repeat = time => {\n    if (this.kickSequence.steps[this.state.step]) this.kick.trigger(time);\n    if (this.snareSequence.steps[this.state.step]) this.snare.trigger(time);\n    if (this.hatSequence.steps[this.state.step]) this.hat.trigger(time);\n    if (this.clapSequence.steps[this.state.step]) this.clap.trigger(time);\n    this.setState(state => {\n      return { step: ((state.step + 1) % 16)}\n    })\n  }\n\n  updateSequence = (sound, stepNumber, selected) => {\n    switch (sound) {\n      case \"kick\":\n        this.kickSequence.steps[stepNumber] = selected;\n        break;\n      case \"snare\":\n        this.snareSequence.steps[stepNumber] = selected;\n        break;\n      case \"hat\":\n        this.hatSequence.steps[stepNumber] = selected;\n        break;\n      case \"clap\":\n        this.clapSequence.steps[stepNumber] = selected;\n        break;\n      default:\n        return;\n    }\n  }\n\n  warmUp = () => {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      // this.props.toggleMute();\n      this.props.togglePlay();\n      setTimeout(() => {\n        this.props.toggleMute();\n        this.props.togglePlay();\n        setTimeout(() => {\n          this.setState({ step: 0 });\n          setTimeout(() => {\n            this.setState({ loading: false, loaded: true })\n          }, 200)\n        }, 10)\n      }, 200);\n    }, 500)\n  }\n\n  bootUpSequencer = () => {\n    const { masterVolume, analyser } = this.props;\n    this.warmUp();\n    setTimeout(() => {\n      masterVolume.connect(analyser);\n    }, 1000)\n  }\n\n  getColor = () => {\n    switch(this.props.colorScheme) {\n      case \"future time\":\n        return \"rgb(143, 97, 230)\";\n      case \"sparks\":\n        return \"rgb(231, 133, 41)\";\n      case \"dokidoki\":\n        return \"rgb(248, 103, 131)\";\n      case \"free\":\n        return \"rgb(71, 209, 222)\";\n      case \"hxh\":\n        return \"rgb(81, 145, 78)\";\n      default:\n        return \"rgb(143, 97, 230)\";\n    }\n  }\n\n  render() {\n    const color = this.props.colorScheme;\n\n    if (!this.state.loaded && !this.state.loading) {\n      return (\n        <div className=\"start-button-container\">\n          <button \n            className={`start-button ${color}`}\n            id=\"start-button\"\n            onClick={this.bootUpSequencer}\n          >\n            Start\n          </button>\n\n          <div className=\"click-catcher\"></div>\n        </div>\n      )\n    }\n\n    if (this.state.loading) {\n      return (\n        <div className=\"start-button-container\">\n          <div className=\"loading-container\">\n            <ReactLoading type={\"bars\"} color={`${this.getColor()}`} width={90} height={30}/>\n          </div>\n          <div className=\"click-catcher\"></div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"step-sequencer\">\n\n        <StepBar currentStep={this.state.step} />\n\n        <Row\n          steps={this.kickSequence.steps}\n          sound=\"kick\"\n          updateSequence={this.updateSequence}\n          colorScheme={this.props.colorScheme}\n        />\n\n        <Row\n          steps={this.snareSequence.steps}\n          sound=\"snare\"\n          updateSequence={this.updateSequence}\n          colorScheme={this.props.colorScheme}\n        />\n\n        <Row\n          steps={this.hatSequence.steps}\n          sound=\"hat\"\n          updateSequence={this.updateSequence}\n          colorScheme={this.props.colorScheme}\n        />\n\n        <Row\n          steps={this.clapSequence.steps}\n          sound=\"clap\"\n          updateSequence={this.updateSequence}\n          colorScheme={this.props.colorScheme}\n        />\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Tone, { Transport } from 'tone';\nimport LogoAndButtons from './Main/LogoAndButtons';\nimport Oscilloscope from './Main/Oscilloscope';\nimport SoundControls from './Main/SoundControls';\nimport Wildcards from './Main/Wildcards';\nimport StepSequencer from './Sequencer/StepSequencer';\n\nexport default class DrumBoy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bpm: 120,\n      playing: false,\n      masterVolume: 0,\n      prevVolume: 1,\n      colorScheme: '--color--',\n      kick: {\n        volume: 1,\n        tone: 150,\n        decay: 0.5\n      },\n      snare: {\n        volume: 1,\n        tone: 100,\n        decay: 0.2\n      },\n      hat: {\n        volume: 1,\n        tone: 130,\n        decay: 0.5\n      },\n      clap: {\n        volume: 1,\n        tone: 600,\n        decay: 0.3\n      }\n    };\n\n    const context = Transport.context.rawContext;\n    this.effects = context.createGain();\n    this.masterVolume = context.createGain();\n    this.analyser = context.createAnalyser();\n    this.bitCrusher = new Tone.BitCrusher(4);\n    this.bitCrusher.wet.value = 0;\n    this.chorus = new Tone.Chorus();\n    this.chorus.wet.value = 0;\n    this.wah = new Tone.AutoWah();\n    this.wah.wet.value = 0;\n    this.pingPong = new Tone.PingPongDelay();\n    this.pingPong.wet.value = 0;\n\n    //input -> effects -> masterVolume -> analyser -> output \n    this.effects.connect(this.bitCrusher.input);\n    this.bitCrusher.connect(this.chorus.input);\n    this.chorus.connect(this.wah.input);\n    this.wah.connect(this.pingPong.input);\n    this.pingPong.connect(this.masterVolume);\n    // this connection is now done after warmUp in Step Sequencer\n    // this.masterVolume.connect(this.analyser);\n    this.analyser.connect(context.destination);\n\n    Transport.bpm.value = 120;\n    Transport.loop = true;\n    Transport.swing = 0;\n    Transport.loopEnd = \"1m\";\n\n    document.addEventListener('keydown', e => {\n      switch (e.keyCode) {\n        case 32:\n          e.preventDefault();\n          if (document.getElementById('start-button')) return;\n          this.togglePlay();\n          break;\n        case 38:\n          this.updateBpmFromArrowKey(this.state.bpm + 1);\n          break;\n        case 40:\n          this.updateBpmFromArrowKey(this.state.bpm - 1);\n          break;\n        case 74:\n          this.testSynth.triggerAttackRelease('C4', '4n');\n          break;\n        default:\n          return;\n      }\n    })\n  }\n\n  togglePlay = () => {\n    Transport.toggle();\n    this.setState(state => {\n      return { playing: !state.playing }\n    });\n  }\n\n  updateBpm = e => {\n    e.preventDefault();\n    const bpm = e.target.value;\n    if (bpm > 0 && bpm < 201) {\n      Transport.bpm.value = bpm;\n      this.setState({ bpm: e.target.value })\n    }\n  }\n\n  updateBpmFromArrowKey = bpm => {\n    if (bpm > 0 && bpm < 201) {\n      Transport.bpm.value = bpm;\n      this.setState({ bpm });\n    }\n  }\n\n  changeColorScheme = e => {\n    e.preventDefault();\n    this.setState({ colorScheme: e.target.value })\n  }\n\n  updateSound = (sound, setting, value) => {\n    this.setState(state => {\n      const updatedSound = state[sound];\n      if (setting === 'volume' || setting === 'decay') {\n        updatedSound[setting] = value / 100;\n      } else {\n        updatedSound[setting] = value;\n      }\n      return { [sound]: updatedSound };\n    })\n  }\n\n  changeMasterVolume = e => {\n    const masterVolume = e.currentTarget.value / 100;\n    this.setState({ masterVolume });\n    this.masterVolume.gain.setValueAtTime(masterVolume, Transport.context.currentTime);\n  }\n\n  toggleMute = () => {\n    const time = Transport.context.currentTime;\n    if (!this.state.masterVolume) {\n      const prevVolume = this.state.prevVolume;\n      this.setState({ masterVolume: prevVolume });\n      this.masterVolume.gain.setValueAtTime(prevVolume, time);\n    } else {\n      const masterVolume = this.state.masterVolume;\n      this.setState({ prevVolume: masterVolume, masterVolume: 0 });\n      this.masterVolume.gain.setValueAtTime(0, time);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"drum-boy\" id=\"electron-aligner\">\n\n        <div className=\"main\">\n          <div className=\"top\">\n            <LogoAndButtons\n              bpm={this.state.bpm}\n              playing={this.state.playing}\n              togglePlay={this.togglePlay}\n              updateBpm={this.updateBpm}\n              changeColorScheme={this.changeColorScheme}\n              colorScheme={this.state.colorScheme}\n            />\n\n            <Oscilloscope\n              context={Transport.context.rawContext}\n              analyser={this.analyser}\n              colorScheme={this.state.colorScheme}\n            />\n\n            <SoundControls\n              kick={this.state.kick}\n              snare={this.state.snare}\n              hat={this.state.hat}\n              clap={this.state.clap}\n              masterVolume={this.state.masterVolume}\n              updateSound={this.updateSound}\n              changeMasterVolume={this.changeMasterVolume}\n              toggleMute={this.toggleMute}\n              colorScheme={this.state.colorScheme}\n            />\n          </div>\n\n          <Wildcards\n            context={Transport.context.rawContext}\n            playing={this.state.playing}\n            effects={this.effects}\n            bitCrusher={this.bitCrusher}\n            wah={this.wah}\n            pingPong={this.pingPong}\n            chorus={this.chorus}\n            colorScheme={this.state.colorScheme}\n          />\n        </div>\n\n        <StepSequencer\n          transport={Transport}\n          effects={this.effects}\n          kick={this.state.kick}\n          snare={this.state.snare}\n          hat={this.state.hat}\n          clap={this.state.clap}\n          masterVolume={this.masterVolume}\n          analyser={this.analyser}\n          togglePlay={this.togglePlay}\n          toggleMute={this.toggleMute}\n          colorScheme={this.state.colorScheme}\n        />\n      </div>\n    )\n  }\n}","import React from 'react';\n\nexport default class Instructions extends React.Component {\n  render() {\n    return (\n      <div className=\"instructions-background\" onClick={this.props.toggleInstructions}>\n        <div className=\"instructions\">\n          <button><i className=\"fas fa-times\"></i></button>\n          <h2 className=\"instructions-header\">Instructions</h2>\n          <ul className=\"bullet-points\">\n            <li>Click the buttons in the grid to activate steps in the sequencer</li>\n            <li>Press the Space Bar or Play Button to play and pause your sequence</li>\n            <li>Press Enter to jump to the beginning of the sequence</li>\n            <li>Use the up and down arrow keys to adjust the tempo</li>\n            <li>Adjust the sliders in the top right to change the sounds live</li>\n            <li>Activate the wildcard buttons in the middle row for unexpected effects</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Samples from './Samples';\nimport DrumBoy from './DrumBoy';\nimport Instructions from './Instructions';\n\nexport default class Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instructions: false\n    };\n  }\n\n  toggleInstructions = () => {\n    this.setState(state => ({ instructions: !state.instructions }));\n  }\n\n  render() {\n    return (\n      <main>\n        <button\n          className=\"instruction-button\"\n          onClick={this.toggleInstructions}\n        >\n          <i className=\"fas fa-bars fa-2x\"></i>\n        </button>\n\n        {this.state.instructions && (\n          <Instructions toggleInstructions={this.toggleInstructions} />\n        )}\n        <Samples />\n        <DrumBoy />\n\n        <div className=\"mobile\">\n          <h2 className=\"mobile-header\">Electron Aligner</h2>\n          <p>Mobile version coming soon...</p>\n        </div>\n      </main>\n    )\n  }\n}","import React from 'react';\nimport Conatiner from './components/Container';\n\nfunction App() {\n  return (\n    <Conatiner />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}